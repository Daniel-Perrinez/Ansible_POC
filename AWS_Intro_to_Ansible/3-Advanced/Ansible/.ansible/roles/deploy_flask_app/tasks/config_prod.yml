---
- name: Configure Prod Host
  block:
    - name: Echo a string
      ansible.builtin.debug:
        msg: "Configure Prod Envirionment"

    - name: Install gunicorn Python modules
      ansible.builtin.pip:
        name:
          - gunicorn
        state: present
        executable: pip3
      become: true
      # https://developers.redhat.com/articles/2023/08/17/how-deploy-flask-application-python-gunicorn#the_application
      # Nginx can’t communicate directly with Flask app.
        # It can’t execute the application.
        # We need WSGI server (Gunicorn) to communicate between server and flask app.

    - name: Install Podman
      ansible.builtin.dnf:
        name:
          - podman
        update_cache: false
        state: present
      become: true

# -------------------------------------------------------------------------------------------------------------------
    - name: Build the container image
      containers.podman.podman_image:
        name: "{{ deploy_flask_app_image_name }}:{{ deploy_flask_app_image_tag }}"
        path: "{{ deploy_flask_app_build_path }}"
        state: build

    - name: Check if the container image exists
      ansible.builtin.command:
        cmd: "podman image exists {{ deploy_flask_app_image_name }}:{{ deploy_flask_app_image_tag }}"
      register: check_image
      failed_when: check_image.rc not in [0, 1]  # Ensure only exit codes 0 (exists) and 1 (doesn't exist) are valid

    - name: Display result if the image exists
      ansible.builtin.debug:
        msg: "The container image {{ deploy_flask_app_image_name }}:{{ deploy_flask_app_image_tag }} exists."
      when: check_image.rc == 0

    - name: Display result if the image does not exist
      ansible.builtin.debug:
        msg: "The container image {{ deploy_flask_app_image_name }}:{{ deploy_flask_app_image_tag }} does not exist."
      when: check_image.rc == 1

# -------------------------------------------------------------------------------------------------------------------
    - name: Deploy proccess
      ansible.builtin.include_tasks: deploy_process.yml
      when: check_image.rc == 0



    # - name: Check if Gunicorn process is running
    #   ansible.builtin.shell: |
    #     pgrep -f "/usr/local/bin/gunicorn --config gunicorn_config.py --bind 0.0.0.0:80 flask_app_prod:app"
    #   register: gunicorn_process
    #   ignore_errors: true
    #   changed_when: false

    # - name: Display Gunicorn status
    #   ansible.builtin.debug:
    #     msg: "( {{ gunicorn_process.stdout }} ' - ' {{ gunicorn_process.rc }} ) Gunicorn is {{ 'running' if gunicorn_process.rc == 0 else 'not running' }}"

    # - name: Start Gunicorn Flask app
    #   ansible.builtin.shell: 
    #     chdir: "{{ deploy_flask_app_build_path }}"
    #     cmd: nohup /usr/local/bin/gunicorn --config gunicorn_config.py --bind 0.0.0.0:80 flask_app_prod:app > /home/ec2-user/flask.log 2>&1 &
    #   when: gunicorn_process.rc != 0
    #   changed_when: gunicorn_process.rc != 0 # <- Uses the return code to define when the task has changed.  

    # - name: Install nginx
    #   ansible.builtin.include_tasks: install_nginx.yml
